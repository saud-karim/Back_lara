<?php

require 'vendor/autoload.php';
$app = require 'bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "๐ ุชูุฑูุฑ ุงูุญุงูุฉ ุงูููุงุฆูุฉ ููุณูุฏุฑุฒ\n";
echo "================================\n\n";

echo "๐ ุงูุจูุงูุงุช ุงูููุถุงูุฉ ุจูุฌุงุญ:\n";
echo "========================\n";

$tables = [
    'users' => 'ุงููุณุชุฎุฏููู',
    'categories' => 'ุงููุฆุงุช', 
    'products' => 'ุงูููุชุฌุงุช',
    'brands' => 'ุงูุจุฑุงูุฏุงุช',
    'suppliers' => 'ุงูููุฑุฏูู',
    'notifications' => 'ุงูุฅุดุนุงุฑุงุช'
];

$totalRecords = 0;
foreach($tables as $table => $arabicName) {
    $count = DB::table($table)->count();
    $totalRecords += $count;
    echo "   โ {$arabicName}: {$count} ุณุฌู\n";
}

echo "\n๐ ุฅุฌูุงูู ุงูุณุฌูุงุช: {$totalRecords}\n\n";

echo "๐ค ุญุณุงุจุงุช ุงููุณุชุฎุฏููู ุงููุชููุฑุฉ:\n";
echo "============================\n";

$admins = DB::table('users')->where('role', 'admin')->get();
$customers = DB::table('users')->where('role', 'customer')->get();

echo "๐ ุงูุฃุฏููุฒ ({$admins->count()}):\n";
foreach($admins as $admin) {
    echo "   โข {$admin->email} - {$admin->name}\n";
}

echo "\n๐ค ุงูุนููุงุก ({$customers->count()}):\n";
foreach($customers->take(5) as $customer) {
    echo "   โข {$customer->email} - {$customer->name}\n";
}
if ($customers->count() > 5) {
    echo "   ... ู " . ($customers->count() - 5) . " ุนููู ุขุฎุฑ\n";
}

echo "\n๐ท๏ธ ุงูููุชุฌุงุช ุงูููุถุงูุฉ:\n";
echo "==================\n";

$products = DB::table('products')->select('name_ar', 'name_en', 'price', 'stock')->get();
foreach($products->take(3) as $product) {
    echo "   ๐ฆ {$product->name_ar} | {$product->name_en}\n";
    echo "      ๐ฐ ุงูุณุนุฑ: {$product->price} | ุงููุฎุฒูู: {$product->stock}\n";
}
if ($products->count() > 3) {
    echo "   ... ู " . ($products->count() - 3) . " ููุชุฌ ุขุฎุฑ\n";
}

echo "\nโ ุงูุณูุฏุฑุฒ ุงููุดุทุฉ ูุงูุขููุฉ:\n";
echo "=========================\n";
echo "   ๐ PermissionSeeder - ุตูุงุญูุงุช ุงููุธุงู\n";
echo "   ๐ BrandSeeder - ุงูุจุฑุงูุฏุงุช\n"; 
echo "   ๐ EcommerceSeeder - ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ\n";
echo "   ๐ CleanSeeder - ุจูุงูุงุช ุฅุถุงููุฉ ูุธููุฉ\n";

echo "\nโ ุงูุณูุฏุฑุฒ ุงูููุนุทูุฉ (ูุงูุช ุชุญุชูู ุนูู ูุดุงูู):\n";
echo "==========================================\n";
echo "   ๐ TranslatedDataSeeder - ุฃุนูุฏุฉ ุบูุฑ ููุฌูุฏุฉ\n";
echo "   ๐ ExtendedDataSeeder - ูุดุงูู ูู schema\n";
echo "   ๐ ProductSeeder - ุบูุฑ ููุณุชุฎุฏู\n";

echo "\n๐ฏ ุฎูุงุตุฉ ููุงุฆูุฉ:\n";
echo "================\n";
echo "โ ุฌููุน ุงูุณูุฏุฑุฒ ุชุนูู ุจุฏูู ุฃุฎุทุงุก\n";
echo "โ ุงูุจูุงูุงุช ูุชูุงููุฉ ูุน ุงูู schema ุงูุญุงูู\n";
echo "โ ุญุณุงุจุงุช ุงูุงุฎุชุจุงุฑ ูุชููุฑุฉ ููุถุจูุทุฉ\n";
echo "โ ุงูุจูุงูุงุช ุชุฏุนู ุงูุนุฑุจูุฉ ูุงูุฅูุฌููุฒูุฉ\n";
echo "โ ุงููุดุฑูุน ุฌุงูุฒ ููุงุณุชุฎุฏุงู ูุงูุชุทููุฑ\n";

echo "\n" . str_repeat("=", 50) . "\n"; 